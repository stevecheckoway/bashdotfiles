#!/usr/bin/env bash

echo "# WARNING: This file was autogenerated on $(date). Do not edit."

# Search through all of the prefixes for the relevant paths and build
# searchpaths.
prefixes="$HOME:$HOME/.cabal:/usr/local:/opt/local:/usr"
path=/sbin:/usr/sbin
manpath=
infopath=
pkgconfigpath=

append_dir() {
	if test -d "$2"; then
		if test -z "${!1}"; then
			eval "$1=\$2"
		else
			eval "$1=\${!1}:\$2"
		fi
	fi
}

append_share_dir() {
	full="$2/$3"
	sfull="$2/share/$3"
	if test ! -L "$sfull" -o "$(readlink -f "$sfull")" != "$full"; then
		append_dir "$1" "$sfull"
	fi
	if test ! -L "$full" -o "$(readlink -f "$full")" != "$sfull"; then
		append_dir "$1" "$full"
	fi
}

for dir in ${prefixes//:/ }; do
	append_dir path "$dir/bin"
	append_dir path "$dir/libexec/gnubin"
	append_share_dir manpath "$dir" man
	append_share_dir infopath "$dir" info
	append_dir pkgconfigpath "$dir/lib/pkgconfig"
done

# Append /bin
append_dir path /bin


# Output paths:
cat <<EOF
export PATH="$path"
export MANPATH="$manpath"
export INFOPATH="$infopath"
export PKG_CONFIG_PATH="$pkgconfigpath"
EOF

# Output static variables
cat <<"EOF"
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export PAGER='less -R'
export EDITOR=vim
export CVS_RSH=ssh
export RSYNC_RSH=ssh
export PS1="[\[$(tput setaf 1)\]\h\[$(tput sgr0)\]:\w] \u\$ "
export PS2="\[$(tput setaf 1)\]>\[$(tput sgr0)\] "
EOF

# Source .bashrc to deal load functions and aliases which are not
# exported.
cat <<EOF
test -f "$HOME/.bashrc" && . "$HOME/.bashrc"
EOF
