#!/usr/bin/env bash

echo "# WARNING: This file was autogenerated on $(date). Do not edit."

# Set up the prompts
        RED="\[\033[0;31m\]"
      GREEN="\[\033[0;32m\]"
     YELLOW="\[\033[0;33m\]"
       BLUE="\[\033[0;34m\]"
DARK_PURPLE="\[\033[0;35m\]"
  DARK_CYAN="\[\033[0;36m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
  DARK_GRAY="\[\033[1;30m\]"
  LIGHT_RED="\[\033[1;31m\]"
      GREEN="\[\033[0;32m\]"
     PURPLE="\[\033[0;35m\]"
       CYAN="\[\033[1;36m\]"
      WHITE="\[\033[1;37m\]"
 COLOR_NONE="\[\033[0m\]"

cat <<EOF
clean_pattern='nothing to commit|nothing added to commit'
remote_pattern='Your branch is (ahead of|behind)'
diverge_pattern='Your branch and (.*) have diverged'
untracked_pattern='Untracked files:'

parse_git_branch() {
	git_status="\$(git status 2>/dev/null)"
	if test \$? -ne 0; then
		return
	fi
	if [[ \${git_status} =~ \${clean_pattern} ]]; then
		state="$GREEN"
	else
		state="$RED"
	fi
	if [[ \${git_status} =~ \${untracked_pattern} ]]; then
		untracked='*'
	else
		untracked=''
	fi
	remote=
	if [[ \${git_status} =~ \${remote_pattern} ]]; then
		if [ "\${BASH_REMATCH[1]}" = "ahead of" ]; then
			remote=↑
		else
			remote=↓
		fi
	elif [[ \${git_status} =~ \${diverge_pattern} ]]; then
		remote=↕
	fi
	# Branch pattern
	branch_pattern="^On branch ([^${IFS}]*)"
	[[ \${git_status} =~ \${branch_pattern} ]]
	echo " (\${state}\${BASH_REMATCH[1]}\${untracked}${YELLOW}\${remote}${COLOR_NONE})"
}

prompt_func() {
	previous_return_value=\$?
	case "\$TERM" in
		xterm*|rxvt*)
			TITLEBAR="\[\e]0;\u@\h: \w\a\]"
			;;
		*)
			TITLEBAR=
			;;
	esac
	prompt="\${TITLEBAR}[${RED}\h${COLOR_NONE}:\w]\$(parse_git_branch) \u"
	if test \$previous_return_value -eq 0; then
		PS1="\${prompt}\\\$ "
	else
		PS1="\${prompt}${RED}\\\$${COLOR_NONE} "
	fi
}

PROMPT_COMMAND=prompt_func
EOF

# Evaluation helper.
cat <<"EOF"
eval_helper() {
	bc -ql <<< "$@"|perl -pe 's/(\.[^0]+)0+$|\.0+$/$1/'
}
EOF

# Add alises
cat <<"EOF"
which dircolors &>/dev/null && { eval $(dircolors); alias ls='ls --color=auto'; } || alias ls='ls -G'
alias less='less -R'
alias bc='bc -ql'
alias '?=eval_helper'
alias gdb='gdb -q'
EOF

# Load local changes, if appropriate.
cat <<EOF
if [ -f "$HOME/.bash_functions" ]; then . "$HOME/.bash_functions"; fi
if [ -f "$HOME/.bash_aliases" ]; then . "$HOME/.bash_aliases"; fi
EOF
